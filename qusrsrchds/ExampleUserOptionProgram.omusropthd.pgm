 /* ---------------------------------------------------------------- */
 /*  The MIT License (MIT)                                           */
 /*                                                                  */
 /*  Copyright (c) 2019 Remain (https://remainsoftware.com)          */
 /*                                                                  */
 /*  Permission is hereby granted, free of charge, to any person     */
 /*  obtaining a copy of this software and associated documentation  */
 /*  files (the "Software"), to deal in the Software without         */
 /*  restriction, including without limitation the rights to use,    */
 /*  copy, modify, merge, publish, distribute, sublicense, and/or    */
 /*  sell copies of the Software, and to permit persons to whom      */
 /*  the Software is furnished to do so, subject to the following    */
 /*  conditions:                                                     */
 /*                                                                  */
 /*  The above copyright notice and this permission notice shall     */
 /*  be included in all copies or substantial portions of the        */
 /*  Software.                                                       */
 /*                                                                  */
 /*  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY       */
 /*  KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE      */
 /*  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR         */
 /*  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS      */
 /*  OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR        */
 /*  OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR      */
 /*  OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE       */
 /*  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.          */
 /*                                                                  */
 /*  Contributors:                                                   */
 /*      Remain Software - initial API and implementation            */
 /*                                                                  */
 /* ---------------------------------------------------------------- */


 /*   *$$\CRTOM CRTCLPGM    */
 /*   *$$ ALWRTVSRC(*NO)    */
 /*   *$$ TGTRLS(V5R2M0)    */
 /*   *$$ REPLACE(*YES)     */
 /*   *$$\ENDOM             */
 /* ---------------------------------------------------------------- */
 /* Program description.                                             */
 /* ---------------------------------------------------------------- */
 /*                                                                  */
 /*  Program ....: OMUSROPTHD                                        */
 /*  Description : Example user option program (general options)     */
 /*  Author .....: Wim Jongman                                       */
 /*  Date .......: 13 02 1997                                        */
 /*  Parameters .: &ENTC, Entity code                                */
 /*                &KEY,  Entity key buffer                          */
 /*                &OPTI, Option used                                */
 /*                &STAT, Return status.                             */
 /*                                                                  */
 /*  Function.                                                       */
 /*  General user option program. You can adapt this program to      */
 /*  serve your specific needs. The parameters passed are:           */
 /*                                                                  */
 /* ---------------------------------------------------------------- */
 /* History of changes                                               */
 /* ---------------------------------------------------------------- */
 /*                                                                  */
 /*  Date .......: 13 02 1997                                        */
 /*  Author .....: Wim  Jongman                                      */
 /*  Description : Added some explaining text:                       */
 /*                                                                  */
 /*                                                                  */
 /* ---------------------------------------------------------------- */
 /* Parameter description                                            */
 /* ---------------------------------------------------------------- */
 /**                                                                 */
 /** &ENTC  - Entity code                                            */
 /** -----                                                           */
 /*  There are currently four major entities defined for the user    */
 /*  options, they roughly indicate from which program the user      */
 /*  options where called. Each entity passes a different key buffer */
 /*  to the user option program in field &KEY.                       */
 /*                                                                  */
 /*  INC  -  The incident entity. This entity can be envoked from    */
 /*          the incident series.       The key buffer lay-out for   */
 /*          this entity is:                                         */
 /*                                                                  */
 /*           1 - 5   ( 5A)  - Helpdesk Code                         */
 /*           6 - 15  (10A)  - Incident code                         */
 /*                                                                  */
 /*          You can use these values to retrieve other incident     */
 /*          attributes with the OMQRTVIN command API.               */
 /*                                                                  */
 /*                                                                  */
 /*  CCA  -  The customer call entity. This entity can be envoked    */
 /*          from the customer call program.   The key buffer        */
 /*          lay-out for this entity is:                             */
 /*                                                                  */
 /*           1 -  5  (5A)   - Helpdesk code                         */
 /*           6 - 15  (10A)  - Call track number                     */
 /*                                                                  */
 /*          You can use these values to retrieve other solution     */
 /*          attributes with the OMQRTVCC command API.               */
 /*                                                                  */
 /**                                                                 */
 /** &OPTI  - Option used                                            */
 /** -----                                                           */
 /*  This parameter contains the option that was used by the user.   */
 /*                                                                  */
 /**                                                                 */
 /** &KEY   - Key buffer to entity                                   */
 /** -----                                                           */
 /*  The key buffers are described earlier, but here they are        */
 /*  again in case you have missed them.                             */
 /*                                                                  */
 /*  INC  -  The incident entity buffer                              */
 /*                                                                  */
 /*           1 - 5   ( 5A)  - Helpdesk Code                         */
 /*           6 - 15  (10A)  - Incident code                         */
 /*                                                                  */
 /*  CCA  -  The customer call entity buffer                         */
 /*                                                                  */
 /*           1 -  5  (5A)   - Helpdesk code                         */
 /*           6 - 15  (10A)  - Call track number                     */
 /*                                                                  */
 /*                                                                  */
 /**                                                                 */
 /** &STAT  - Return status                                          */
 /** -----                                                           */
 /*  The return status field &STAT can be filled with the following  */
 /*  values:                                                         */
 /*                                                                  */
 /*  *TERM - If this value is used, the calling program will act     */
 /*          as if an error had occured during the processing of     */
 /*          the user option. The option in the list will be in      */
 /*          reverse image and list processing stops. You are        */
 /*          responsible for sending error messages to the calling   */
 /*          program to indicate the cause of the error. This can    */
 /*          be done with the SNDPGMMSG command.                     */
 /*                                                                  */
 /*  *CNCL - If this value is used, the calling program will act     */
 /*          as if the user pressed F12 on a list continuation       */
 /*          display. The list option will be cleared but list       */
 /*          processing will stop.                                   */
 /*                                                                  */
 /*  *EXIT - If the calling program receives this value it will      */
 /*          terminate as if the user had pressed F3. All list       */
 /*          processing and pending functions are canceled.          */
 /*                                                                  */
 /*  *NORM - Normal termination of the user option is assumed. The   */
 /*          list option is blanked and the calling program will     */
 /*          continue with the next list option. If no more list     */
 /*          options are keyed, the list will be re-displayed.       */
 /*                                                                  */
 /*  (note)  If the user option ended in error, you are              */
 /*          responsible for sending error messages to the calling   */
 /*          program to indicate the cause of the error. This can    */
 /*          be done with the SNDPGMMSG command. The same goes       */
 /*          for completion messages when the option completed       */
 /*          normally. This can be done with the same command.       */
 /*                                                                  */
 /*                                                                  */
 /* ---------------------------------------------------------------- */
             PGM        PARM(&ENTC &KEY &OPTI &STAT)

 /* ---------------------------------------------------------------- */
 /* Declaration                                                      */
 /* ---------------------------------------------------------------- */

          /* ------------------------------------------------------- */
          /* Parameter                                               */
          /* ------------------------------------------------------- */
             DCL        VAR(&ENTC) TYPE(*CHAR) LEN(3)
             DCL        VAR(&KEY)  TYPE(*CHAR) LEN(100)
             DCL        VAR(&OPTI) TYPE(*CHAR) LEN(2)
             DCL        VAR(&STAT) TYPE(*CHAR) LEN(5)

          /* ------------------------------------------------------- */
          /* Incident keyfields                                      */
          /* ------------------------------------------------------- */
             DCL        VAR(&HEDC) TYPE(*CHAR) LEN(5)
             DCL        VAR(&INC)  TYPE(*CHAR) LEN(10)
             DCL        VAR(&DATE) TYPE(*CHAR) LEN(6)

          /* ------------------------------------------------------- */
          /* Customer call fields                                    */
          /* ------------------------------------------------------- */
          /* DCL        VAR(&HEDC) TYPE(*CHAR) LEN(5)                */
             DCL        VAR(&CTN#) TYPE(*CHAR) LEN(10)

          /* ------------------------------------------------------- */
          /* Helpdesk attributes                                     */
          /* ------------------------------------------------------- */
             DCL        VAR(&CUSC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CCTC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CTN)  TYPE(*CHAR) LEN(10)
             DCL        VAR(&SHID) TYPE(*CHAR) LEN(50)
             DCL        VAR(&TEL)  TYPE(*CHAR) LEN(15)
             DCL        VAR(&ISFL) TYPE(*CHAR) LEN(10)
             DCL        VAR(&INST) TYPE(*CHAR) LEN(5)
             DCL        VAR(&APPL) TYPE(*CHAR) LEN(5)
             DCL        VAR(&REQ)  TYPE(*CHAR) LEN(10)
             DCL        VAR(&FIX)  TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGD) TYPE(*CHAR) LEN(256)

          /* ------------------------------------------------------- */
          /* Request attributes                                      */
          /* ------------------------------------------------------- */
             DCL        VAR(&USRI) TYPE(*CHAR) LEN(8)
             DCL        VAR(&ADDR) TYPE(*CHAR) LEN(8)

 /* ---------------------------------------------------------------- */
 /* Init                                                             */
 /* ---------------------------------------------------------------- */

          /* ------------------------------------------------------- */
          /* Install error monitor                                   */
          /* ------------------------------------------------------- */
             MONMSG     MSGID(CPF0000 OMQ0000) EXEC(GOTO CMDLBL(ERROR))

 /* ---------------------------------------------------------------- */
 /* General options                                                  */
 /* ---------------------------------------------------------------- */

          /* ------------------------------------------------------- */
          /* QUSCMDLN - This 'command line window' command can be    */
          /* used in the functions:                                  */
          /* INCIDENT REGISTRATION                                   */
          /* CUSTOMER CALL MAINTENANCE                               */
          /* ------------------------------------------------------- */
             IF         COND(&OPTI *EQ 'CW') THEN(DO)
             CALL       PGM(QUSCMDLN)
             CHGVAR     VAR(&STAT) VALUE('*NORM')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

          /* ------------------------------------------------------- */
          /* WRKSPLF - This 'work spoolfile' command can be          */
          /* used in the functions:                                  */
          /* INCIDENT REGISTRATION                                   */
          /* CUSTOMER CALL MAINTENANCE                               */
          /* ------------------------------------------------------- */
             IF         COND(&OPTI *EQ 'SP') THEN(DO)
             WRKSPLF
             CHGVAR     VAR(&STAT) VALUE('*NORM')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

          /* ------------------------------------------------------- */
          /* DSPMSG - This 'display message' command can be          */
          /* used in the functions:                                  */
          /* INCIDENT REGISTRATION                                   */
          /* CUSTOMER CALL MAINTENANCE                               */
          /* ------------------------------------------------------- */
             IF         COND(&OPTI *EQ 'DM') THEN(DO)
             DSPMSG
             CHGVAR     VAR(&STAT) VALUE('*NORM')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

          /* ------------------------------------------------------- */
          /* Error     - Force an error                              */
          /* used in the functions:                                  */
          /* INCIDENT REGISTRATION                                   */
          /* CUSTOMER CALL MAINTENANCE                               */
          /* ------------------------------------------------------- */
             IF         COND(&OPTI *EQ 'ER') THEN(DO)
             CHGVAR     VAR(&STAT) VALUE('*TERM')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

          /* ------------------------------------------------------- */
          /* Cancel    - Simulate cancel                             */
          /* used in the functions:                                  */
          /* INCIDENT REGISTRATION                                   */
          /* CUSTOMER CALL MAINTENANCE                               */
          /* ------------------------------------------------------- */
             IF         COND(&OPTI *EQ 'CA') THEN(DO)
             CHGVAR     VAR(&STAT) VALUE('*CNCL')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

          /* ------------------------------------------------------- */
          /* Exit      - Simulate Exit                               */
          /* used in the functions:                                  */
          /* INCIDENT REGISTRATION                                   */
          /* CUSTOMER CALL MAINTENANCE                               */
          /* ------------------------------------------------------- */
             IF         COND(&OPTI *EQ 'EX') THEN(DO)
             CHGVAR     VAR(&STAT) VALUE('*EXIT')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

          /* ------------------------------------------------------- */
          /* WRKSBMJOB - Work with submitted jobs                    */
          /* used in the functions:                                  */
          /* INCIDENT REGISTRATION                                   */
          /* CUSTOMER CALL MAINTENANCE                               */
          /* ------------------------------------------------------- */
             IF         COND(&OPTI *EQ 'WS') THEN(DO)
             WRKSBMJOB
             CHGVAR     VAR(&STAT) VALUE('*NORM')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

 /* ---------------------------------------------------------------- */
 /* OPTION CI - Change incident                                      */
 /* ---------------------------------------------------------------- */

             IF         COND(&OPTI *EQ 'CI') THEN(DO)


         /*--------------------------------------------------------- */
         /* If used with wrong entity display message                */
         /* -------------------------------------------------------- */
             IF         COND(&ENTC *NE 'INC') THEN(DO)
             SNDPGMMSG  MSGID(USRE004) MSGF(OMSMSG) MSGDTA(&ENTC +
                          *CAT 'INC' *CAT '   ' *CAT '   ' *CAT '   ')
             CHGVAR     VAR(&STAT) VALUE('*TERM')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

         /*--------------------------------------------------------- */
         /* Escalate                                                 */
         /* -------------------------------------------------------- */
             CHGVAR     VAR(&HEDC) VALUE(%SST(&KEY  1 5))
             CHGVAR     VAR(&INC) VALUE(%SST(&KEY  6 10))

             ?          OMQCHGIN DESK(&HEDC) INC(&INC)
             GOTO       CMDLBL(ENDPGM)
             ENDDO

 /* ---------------------------------------------------------------- */
 /* OPTION ES - Escalate the incident                                */
 /* ---------------------------------------------------------------- */

             IF         COND(&OPTI *EQ 'ES') THEN(DO)


         /*--------------------------------------------------------- */
         /* If used with wrong entity display message                */
         /* -------------------------------------------------------- */
             IF         COND(&ENTC *NE 'INC') THEN(DO)
             SNDPGMMSG  MSGID(USRE004) MSGF(OMSMSG) MSGDTA(&ENTC +
                          *CAT 'INC' *CAT '   ' *CAT '   ' *CAT '   ')
             CHGVAR     VAR(&STAT) VALUE('*TERM')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

         /*--------------------------------------------------------- */
         /* Escalate                                                 */
         /* -------------------------------------------------------- */
             CHGVAR     VAR(&HEDC) VALUE(%SST(&KEY  1 5))
             CHGVAR     VAR(&INC) VALUE(%SST(&KEY  6 10))

          ?  OMQCHGIN   ACTC(*ESCALATE) DESK(&HEDC) INC(&INC)
             GOTO       CMDLBL(ENDPGM)
             ENDDO

 /* ---------------------------------------------------------------- */
 /* OPTION CF - Create fix from incident.                            */
 /* ---------------------------------------------------------------- */

             IF         COND(&OPTI *EQ 'CF') THEN(DO)


         /*--------------------------------------------------------- */
         /* If used with wrong entity display message                */
         /* -------------------------------------------------------- */
             IF         COND(&ENTC *NE 'INC') THEN(DO)
             SNDPGMMSG  MSGID(USRE004) MSGF(OMSMSG) MSGDTA(&ENTC +
                          *CAT 'INC' *CAT '   ' *CAT '   ' *CAT '   ')
             CHGVAR     VAR(&STAT) VALUE('*TERM')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

         /*--------------------------------------------------------- */
         /* Get the incident key                                     */
         /* -------------------------------------------------------- */
             CHGVAR     VAR(&HEDC) VALUE(%SST(&KEY  1 5))
             CHGVAR     VAR(&INC) VALUE(%SST(&KEY  6 10))

         /*--------------------------------------------------------- */
         /* Create a fix                                             */
         /* -------------------------------------------------------- */

         /*----------------------------------------------- */
         /* Ask for the application to create the fix in   */
         /* ---------------------------------------------- */
             CALL       PGM(OMX101) PARM(&APPL &MSGD &MSGD &APPL '0')
             IF         COND(&APPL *NE ' ') THEN(DO)

         /*----------------------------------------------- */
         /* Get the incindent                              */
         /* ---------------------------------------------- */
             OMQRTVIN   HEDC(&HEDC) INC(&INC) CTN(&CTN) SHID(&SHID)

         /*----------------------------------------------- */
         /* Get the customer call to get the contact       */
         /* ---------------------------------------------- */
             OMQRTVCC   HEDC(&HEDC) CTN(&CTN) CUSC(&CUSC) CCTC(&CCTC)

         /*----------------------------------------------- */
         /* Get the contact to get the telephone           */
         /* ---------------------------------------------- */
             OMQRTVCO   CUSC(&CUSC) CCTC(&CCTC) TEL(&TEL)
             IF         COND(&TEL *EQ ' ') THEN(CHGVAR VAR(&TEL) +
                          VALUE('-'))

         /*----------------------------------------------- */
         /* Add a fix                                      */
         /* ---------------------------------------------- */
             OMQCHGFI   ACTC(*ADD) APPL(&APPL) FIX(*GEN) FIXT(*DFT) +
                          RLS(*CURRENT) PRIC(*DFT) PGMR(*SAME) +
                          ESDT(*CURRENT) EDDT(*CURRENT) +
                          ECDT(*CURRENT) EHR(*SAME) SHFD(&SHID)

         /*----------------------------------------------- */
         /* Get the fix     number                         */
         /* ---------------------------------------------- */
             RCVMSG     MSGDTA(&MSGD)
             CHGVAR     VAR(&FIX) VALUE(%SST(&MSGD 6 10))

         /*----------------------------------------------- */
         /* Copy the incident to the fix     text.         */
         /* ---------------------------------------------- */
             CALL       PGM(OMTXTHD) PARM('INC' 'FIX' &HEDC &INC +
                          &APPL &FIX)

         /*----------------------------------------------- */
         /* Show the fix                                   */
         /* ---------------------------------------------- */
             OMQUSIFI   ACTC(*CHANGE) PREFILL(*YES) KEY(&APPL &FIX)

             ENDDO
             GOTO       CMDLBL(ENDPGM)
             ENDDO

 /* ---------------------------------------------------------------- */
 /* OPTION CR - Create request from incident                         */
 /* ---------------------------------------------------------------- */

             IF         COND(&OPTI *EQ 'CR') THEN(DO)


         /*--------------------------------------------------------- */
         /* If used with wrong entity display message                */
         /* -------------------------------------------------------- */
             IF         COND(&ENTC *NE 'INC') THEN(DO)
             SNDPGMMSG  MSGID(USRE004) MSGF(OMSMSG) MSGDTA(&ENTC +
                          *CAT 'INC' *CAT '   ' *CAT '   ' *CAT '   ')
             CHGVAR     VAR(&STAT) VALUE('*TERM')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

         /*--------------------------------------------------------- */
         /* Get the incident key                                     */
         /* -------------------------------------------------------- */
             CHGVAR     VAR(&HEDC) VALUE(%SST(&KEY  1 5))
             CHGVAR     VAR(&INC) VALUE(%SST(&KEY  6 10))

         /*--------------------------------------------------------- */
         /* Create a request.                                        */
         /* -------------------------------------------------------- */

         /*----------------------------------------------- */
         /* Get the incindent                              */
         /* ---------------------------------------------- */
             OMQRTVIN   HEDC(&HEDC) INC(&INC) CTN(&CTN) STAT(&INST) +
                          SHID(&SHID)

         /*----------------------------------------------- */
         /* Status must be *OMS                            */
         /* ---------------------------------------------- */
             IF         COND(&INST *NE '*OMS') THEN(DO)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('An +
                          incident may only be promoted to a +
                          request if the status is *OMS')
             CHGVAR     VAR(&STAT) VALUE('*TERM')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

         /*----------------------------------------------- */
         /* Ask for the application to create the request  */
         /* in.                                            */
         /* ---------------------------------------------- */
             CALL       PGM(OMX101) PARM(&APPL &MSGD &MSGD &APPL '0')
             IF         COND(&APPL *NE ' ') THEN(DO)

         /*----------------------------------------------- */
         /* Get the customer call to get the contact       */
         /* ---------------------------------------------- */
             OMQRTVCC   HEDC(&HEDC) CTN(&CTN) CUSC(&CUSC) CCTC(&CCTC)

         /*----------------------------------------------- */
         /* Get the contact to get the telephone           */
         /* ---------------------------------------------- */
             OMQRTVCO   CUSC(&CUSC) CCTC(&CCTC) TEL(&TEL)
             IF         COND(&TEL *EQ ' ') THEN(CHGVAR VAR(&TEL) +
                          VALUE('-'))

         /*----------------------------------------------- */
         /* Add a request                                  */
         /* ---------------------------------------------- */
             CHGVAR     VAR(&ADDR) VALUE(%SST(&CUSC 1 8))
             CHGVAR     VAR(&USRI) VALUE(%SST(&CCTC 1 8))

             OMQCHGRE   ACTC(*ADD) APPL(&APPL) REQ(*GEN) ADDR(&ADDR) +
                          USRI(&USRI) TEL(&TEL) SHRD(&SHID)

         /*----------------------------------------------- */
         /* Get the request number                         */
         /* ---------------------------------------------- */
             RCVMSG     MSGDTA(&MSGD)
             CHGVAR     VAR(&REQ) VALUE(%SST(&MSGD 6 10))

         /*----------------------------------------------- */
         /* Copy the incident to the request text.         */
         /* ---------------------------------------------- */
             CALL       PGM(OMTXTHD) PARM('INC' 'REQ' &HEDC &INC +
                          &APPL &REQ)

         /*----------------------------------------------- */
         /* Connect the request to this incident           */
         /* ---------------------------------------------- */
             OMQCHGIN   ACTC(*OMS) DESK(&HEDC) INC(&INC) TAPP(&APPL) +
                          TREQ(&REQ)

         /*----------------------------------------------- */
         /* Show the request                               */
         /* ---------------------------------------------- */
             OMQUSIRE   ACTC(*CHANGE) PRAPPL(*YES) KEY(&APPL &REQ)

             ENDDO
             GOTO       CMDLBL(ENDPGM)
             ENDDO

 /* ---------------------------------------------------------------- */
 /* OPTION RC - Create request and complete                          */
 /* ---------------------------------------------------------------- */

             IF         COND(&OPTI *EQ 'RC') THEN(DO)


         /*--------------------------------------------------------- */
         /* If used with wrong entity display message                */
         /* -------------------------------------------------------- */
             IF         COND(&ENTC *NE 'INC') THEN(DO)
             SNDPGMMSG  MSGID(USRE004) MSGF(OMSMSG) MSGDTA(&ENTC +
                          *CAT 'INC' *CAT '   ' *CAT '   ' *CAT '   ')
             CHGVAR     VAR(&STAT) VALUE('*TERM')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

         /*--------------------------------------------------------- */
         /* Get the incident key                                     */
         /* -------------------------------------------------------- */
             CHGVAR     VAR(&HEDC) VALUE(%SST(&KEY  1 5))
             CHGVAR     VAR(&INC) VALUE(%SST(&KEY  6 10))

         /*--------------------------------------------------------- */
         /* Create a request.                                        */
         /* -------------------------------------------------------- */

         /*----------------------------------------------- */
         /* Get the incindent                              */
         /* ---------------------------------------------- */
             OMQRTVIN   HEDC(&HEDC) INC(&INC) CTN(&CTN) STAT(&INST) +
                          SHID(&SHID)

         /*----------------------------------------------- */
         /* Ask for the application to create the request  */
         /* in.                                            */
         /* ---------------------------------------------- */
             CALL       PGM(OMX101) PARM(&APPL &MSGD &MSGD &APPL '0')
             IF         COND(&APPL *NE ' ') THEN(DO)

         /*----------------------------------------------- */
         /* Get the customer call to get the contact       */
         /* ---------------------------------------------- */
             OMQRTVCC   HEDC(&HEDC) CTN(&CTN) CUSC(&CUSC) CCTC(&CCTC)

         /*----------------------------------------------- */
         /* Get the contact to get the telephone           */
         /* ---------------------------------------------- */
             OMQRTVCO   CUSC(&CUSC) CCTC(&CCTC) TEL(&TEL)
             IF         COND(&TEL *EQ ' ') THEN(CHGVAR VAR(&TEL) +
                          VALUE('-'))

         /*----------------------------------------------- */
         /* Add a request                                  */
         /* ---------------------------------------------- */
             CHGVAR     VAR(&ADDR) VALUE(%SST(&CUSC 1 8))
             CHGVAR     VAR(&USRI) VALUE(%SST(&CCTC 1 8))

             OMQCHGRE   ACTC(*ADD) APPL(&APPL) REQ(*GEN) ADDR(&ADDR) +
                          USRI(&USRI) TEL(&TEL) SHRD(&SHID)

         /*----------------------------------------------- */
         /* Get the request number                         */
         /* ---------------------------------------------- */
             RCVMSG     MSGDTA(&MSGD)
             CHGVAR     VAR(&REQ) VALUE(%SST(&MSGD 6 10))

         /*----------------------------------------------- */
         /* Copy the incident to the request text.         */
         /* ---------------------------------------------- */
             CALL       PGM(OMTXTHD) PARM('INC' 'REQ' &HEDC &INC +
                          &APPL &REQ)

         /*----------------------------------------------- */
         /* Connect the request to this incident           */
         /* ---------------------------------------------- */
             OMQCHGIN   ACTC(*OMS) DESK(&HEDC) INC(&INC) TAPP(&APPL) +
                          TREQ(&REQ)

         /*----------------------------------------------- */
         /* Show the request                               */
         /* ---------------------------------------------- */
             OMQUSIRE   ACTC(*CHANGE) PRAPPL(*YES) KEY(&APPL &REQ)

         /*----------------------------------------------- */
         /* Complete the incident                          */
         /* ---------------------------------------------- */
             RTVJOBA    DATE(&DATE)
             OMQCHGIN   ACTC(*CHANGE) DESK(&HEDC) INC(&INC) +
                          USF1('*OMS') USF2('(&REQ *CAT &DATE)')
             OMQCHGIN   ACTC(*COMPLETE) DESK(&HEDC) INC(&INC)

             ENDDO
             GOTO       CMDLBL(ENDPGM)
             ENDDO

 /* ---------------------------------------------------------------- */
 /* OPTION CO - Create outq in outq library.                         */
 /* ---------------------------------------------------------------- */

             IF         COND(&OPTI *EQ 'CO') THEN(DO)


         /*--------------------------------------------------------- */
         /* If used with wrong entity display message                */
         /* -------------------------------------------------------- */
             IF         COND(&ENTC *NE 'INC') THEN(DO)
             SNDPGMMSG  MSGID(USRE004) MSGF(OMSMSG) MSGDTA(&ENTC +
                          *CAT 'INC' *CAT '   ' *CAT '   ' *CAT '   ')
             CHGVAR     VAR(&STAT) VALUE('*TERM')
             GOTO       CMDLBL(ENDPGM)
             ENDDO

         /*--------------------------------------------------------- */
         /* Get the incident key                                     */
         /* -------------------------------------------------------- */
             CHGVAR     VAR(&HEDC) VALUE(%SST(&KEY  1 5))
             CHGVAR     VAR(&INC) VALUE(%SST(&KEY  6 10))

         /*--------------------------------------------------------- */
         /* Get the outq library                                     */
         /* -------------------------------------------------------- */
             OMQRTVHD   DESK(&HEDC) ISFL(&ISFL)

         /*--------------------------------------------------------- */
         /* Create the output queue                                  */
         /* -------------------------------------------------------- */
             CRTOUTQ    OUTQ(&ISFL/&INC) TEXT('Remain - Created by +
                          User Option OMUSROPTHD')

             SNDPGMMSG  MSG('Output queue created.')

             GOTO       CMDLBL(ENDPGM)
             ENDDO

 /* ---------------------------------------------------------------- */
 /* Exit                                                             */
 /* ---------------------------------------------------------------- */


 /* ---------------------------------------------------------------- */
 /* Errors                                                           */
 /* ---------------------------------------------------------------- */
ERROR:
             CHGVAR     VAR(&STAT) VALUE('*TERM')

 /* ---------------------------------------------------------------- */
 /* End of program                                                   */
 /* ---------------------------------------------------------------- */
 ENDPGM:
             ENDPGM
