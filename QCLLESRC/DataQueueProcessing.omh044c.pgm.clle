 /* ---------------------------------------------------------------- */
 /*  The MIT License (MIT)                                           */
 /*                                                                  */
 /*  Copyright (c) 2019 Remain (https://remainsoftware.com)          */
 /*                                                                  */
 /*  Permission is hereby granted, free of charge, to any person     */
 /*  obtaining a copy of this software and associated documentation  */
 /*  files (the "Software"), to deal in the Software without         */
 /*  restriction, including without limitation the rights to use,    */
 /*  copy, modify, merge, publish, distribute, sublicense, and/or    */
 /*  sell copies of the Software, and to permit persons to whom      */
 /*  the Software is furnished to do so, subject to the following    */
 /*  conditions:                                                     */
 /*                                                                  */
 /*  The above copyright notice and this permission notice shall     */
 /*  be included in all copies or substantial portions of the        */
 /*  Software.                                                       */
 /*                                                                  */
 /*  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY       */
 /*  KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE      */
 /*  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR         */
 /*  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS      */
 /*  OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR        */
 /*  OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR      */
 /*  OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE       */
 /*  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.          */
 /*                                                                  */
 /*  Contributors:                                                   */
 /*      Remain Software - initial API and implementation            */
 /*                                                                  */
 /* ---------------------------------------------------------------- */


 /* ---------------------------------------------------------------- */
 /* Description                                                      */
 /* ---------------------------------------------------------------- */
 /*                                                                  */
 /* Program ....: OMH044C                                            */
 /* Function ...: Data queue processing                              */
 /* Author .....: Remain Software                                    */
 /* Parameters .: &DTAQ, Data queue                                  */
 /*               &DTQL, Data queue library.                         */
 /*               &OPTI, '1' = Send                                  */
 /*                      '2' = Receive                               */
 /*               &DATA, Data to send / Data received                */
 /*               &LEN,  Length of data to receive/send              */
 /*               &WAIT, Wait time for data queue                    */
 /*               &STAT, Status                                      */
 /*                                                                  */
 /* This program rebuilds the data queue in the data queue           */
 /* parameters. If the data queue does not exist it is created. If   */
 /* it does exist it is removed and then created. The library can    */
 /* be passed as blanks. If it is, the library of this program is    */
 /* used.                                                            */
 /*                                                                  */
 /* ---------------------------------------------------------------- */

 /* ---------------------------------------------------------------- */
 /* Initialisation                                                   */
 /* ---------------------------------------------------------------- */
             PGM        PARM(&DTAQ &DTQL &OPTI &DATA &LEN &WAIT &STAT)

          /* ------------------------------------------------------- */
          /* Declare parameters                                      */
          /* ------------------------------------------------------- */
             DCL        VAR(&DTAQ)    TYPE(*CHAR) LEN(10)
             DCL        VAR(&DTQL)    TYPE(*CHAR) LEN(10)
             DCL        VAR(&OPTI)    TYPE(*CHAR) LEN(1)
             DCL        VAR(&DATA)    TYPE(*CHAR) LEN(9999)
             DCL        VAR(&WAIT)    TYPE(*DEC)  LEN(5 0)
             DCL        VAR(&LEN)     TYPE(*DEC)  LEN(5 0)
             DCL        VAR(&STAT)    TYPE(*CHAR) LEN(5)

          /* ------------------------------------------------------- */
          /* Declare variables                                       */
          /* ------------------------------------------------------- */

          /* ------------------------------------------------------- */
          /* Install error monitor                                   */
          /* ------------------------------------------------------- */
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ERROR))

             CHGVAR     VAR(&STAT) VALUE('*NORM')

 /* ---------------------------------------------------------------- */
 /* Processing.                                                      */
 /* ---------------------------------------------------------------- */

          /* ------------------------------------------------------- */
          /* Send the message to the data queue                      */
          /* ------------------------------------------------------- */
             IF         COND(&OPTI *EQ '1') THEN(CALL PGM(QSNDDTAQ) +
                          PARM(&DTAQ &DTQL &LEN &DATA))

          /* ------------------------------------------------------- */
          /* Retrieve the data from the data queue                   */
          /* ------------------------------------------------------- */
             IF         COND(&OPTI *EQ '2') THEN(CALL PGM(QRCVDTAQ) +
                          PARM(&DTAQ &DTQL &LEN &DATA &WAIT))

          /* ------------------------------------------------------- */
          /* End of program                                          */
          /* ------------------------------------------------------- */
             GOTO       CMDLBL(ENDPGM)

 /* ---------------------------------------------------------------- */
 /* Handle unexpected messages                                       */
 /* ---------------------------------------------------------------- */
 ERROR:
             CHGVAR     VAR(&STAT) VALUE('*TERM')
             MONMSG     MSGID(CPF0000)

             CHGVAR     VAR(&LEN) VALUE(0)
             MONMSG     MSGID(CPF0000)

             DLYJOB     DLY(1)
             MONMSG     MSGID(CPF0000)

             SNDPGMMSG  MSGID(UNX0001) MSGF(OMHMSG) MSGDTA(OMH044C) +
                          TOPGMQ(*SAME) MSGTYPE(*DIAG)
             MONMSG     MSGID(CPF0000)

             RETURN

 /* ---------------------------------------------------------------- */
 /* Exit                                                             */
 /* ---------------------------------------------------------------- */
 ENDPGM:
             RMVMSG     CLEAR(*ALL)

             ENDPGM
